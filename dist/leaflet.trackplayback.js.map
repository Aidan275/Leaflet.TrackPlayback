{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/leaflet.trackplayback/util.js","webpack:///./src/leaflet.trackplayback/track.js","webpack:///./src/leaflet.trackplayback/trackcontroller.js","webpack:///./src/leaflet.trackplayback/clock.js","webpack:///./src/leaflet.trackplayback/tracklayer.js","webpack:///./src/leaflet.trackplayback/draw.js","webpack:///./src/leaflet.trackplayback/trackplayback.js","webpack:///./src/leaflet.trackplayback/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isArray","arr","Array","toString","Track","L","Class","extend","initialize","trackData","options","setOptions","this","forEach","item","isOrigin","_trackPoints","_timeTick","_update","addTrackPoint","trackPoint","len","length","_addTrackPoint","getTimes","times","push","time","getStartTrackPoint","getEndTrackPoint","getTrackPointByTime","getCalculateTrackPointByTime","endpoint","startPt","endPt","left","right","parseInt","t0","t1","Error","point","lng","lat","distanceTo","v","sinx","y","cosx","x","step","dir","Math","PI","asin","undefined","getTrackPointsBeforeTime","tpoints","_sortTrackPointsByTime","_updatetimeTick","j","tmp","TrackController","tracks","draw","_tracks","addTrack","_draw","_updateTime","getMinTime","_minTime","getMaxTime","_maxTime","track","drawTracksByTime","clear","tps","drawTrack","stime","etime","Clock","Evented","speed","maxSpeed","trackController","_trackController","_endTime","_curTime","_speed","_maxSpeed","_intervalID","_lastFpsUpdateTime","start","Util","requestAnimFrame","_tick","stop","cancelAnimFrame","rePlaying","slowSpeed","quickSpeed","getSpeed","getCurTime","getStartTime","getEndTime","isPlaying","setCursor","fire","setSpeed","_caculatefpsTime","now","Date","isPause","stepTime","pow","TrackLayer","Renderer","padding","onAdd","map","_container","DomUtil","getPane","pane","appendChild","_ctx","getContext","onRemove","remove","getContainer","getBounds","_bounds","_map","_animatingZoom","b","container","size","getSize","Browser","retina","setPosition","min","width","height","style","scale","translate","Draw","trackPointOptions","isDraw","useCanvas","stroke","color","fill","fillColor","opacity","radius","trackLineOptions","weight","targetOptions","useImg","imgUrl","toolTipOptions","offset","direction","permanent","_showTrackPoint","_showTrackLine","_trackLayer","addTo","_canvas","_bufferTracks","_trackPointFeatureGroup","featureGroup","on","_trackLayerUpdate","_onmousemoveEvt","update","trackpoints","_drawTrack","showTrackPoint","hideTrackPoint","showTrackLine","hideTrackLine","off","hasLayer","removeLayer","_clearLayer","element","index","e","layerPoint","leni","tpoint","latLngToLayerPoint","latLng","_opentoolTip","_tooltip","cursor","trackpoint","latlng","tooltip","setLatLng","setContent","_getTooltipText","_drawTrackLine","_drawShipImage","_drawShipCanvas","_drawTrackPointsCanvas","_drawTrackPointsSvg","tp0","save","beginPath","moveTo","tpi","lineTo","globalAlpha","strokeStyle","lineWidth","fillStyle","restore","arc","cricleMarker","circleMarker","bindTooltip","addLayer","rotate","w","h","dh","closePath","img","window","Image","onload","drawImage","src","targetobj","content","info","join","bounds","clearRect","clearLayers","TrackPlayBack","data","drawOptions","_initTracks","clock","clockOptions","dispose","trackplayback","__webpack_exports__"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kEClFO,SAAAC,EAAAC,GACP,OAAAC,MAAAF,QAAAE,MAAAF,QAAAC,GAAA,mBAAAvB,OAAAkB,UAAAO,SAAAhC,KAAA8B,UCGO,MAAAG,EAAAC,EAAAC,MAAAC,QAEPC,WAAA,SAAAC,KAAAC,GACAL,EAAAM,WAAAC,KAAAF,GAEAD,EAAAI,QAAAC,IACAA,EAAAC,UAAA,IAEAH,KAAAI,aAAAP,EACAG,KAAAK,aACAL,KAAAM,WAGAC,cAAA,SAAAC,GACA,GAAQpB,EAAOoB,GACf,QAAApD,EAAA,EAAAqD,EAAAD,EAAAE,OAA8CtD,EAAAqD,EAASrD,IACvD4C,KAAAO,cAAAC,EAAApD,IAGA4C,KAAAW,eAAAH,IAGAI,SAAA,WACA,IAAAC,KACA,QAAAzD,EAAA,EAAAqD,EAAAT,KAAAI,aAAAM,OAAmDtD,EAAAqD,EAASrD,IAC5DyD,EAAAC,KAAAd,KAAAI,aAAAhD,GAAA2D,MAEA,OAAAF,GAGAG,mBAAA,WACA,OAAAhB,KAAAI,aAAA,IAGAa,iBAAA,WACA,OAAAjB,KAAAI,aAAAJ,KAAAI,aAAAM,OAAA,IAGAQ,oBAAA,SAAAH,GACA,OAAAf,KAAAI,aAAAJ,KAAAK,UAAAU,KAGAI,6BAAA,SAAAJ,GAEA,IAAAK,EAAApB,KAAAkB,oBAAAH,GACAM,EAAArB,KAAAgB,qBACAM,EAAAtB,KAAAiB,mBACAJ,EAAAb,KAAAY,WACA,GAAAG,EAAAM,EAAAN,QAAAO,EAAAP,KAAA,OACA,IAEAlC,EAFA0C,EAAA,EACAC,EAAAX,EAAAH,OAAA,EAGA,GAAAa,IAAAC,EACA,OAAAJ,EAEA,KAAAI,EAAAD,GAAA,GAEAR,EAAAF,EADAhC,EAAA4C,UAAAF,EAAAC,GAAA,IACAD,EAAA1C,EACA2C,EAAA3C,EAGA,IAAA6C,EAAAb,EAAAU,GACAI,EAAAd,EAAAW,GACAlD,EAAAyC,EACA,IAAAf,KAAAkB,oBAAAQ,GACA,UAAAE,MAAA,eAEAP,EAAA5B,EAAAoC,MAAA7B,KAAAkB,oBAAAQ,GAAAI,IAAA9B,KAAAkB,oBAAAQ,GAAAK,KACAT,EAAA7B,EAAAoC,MAAA7B,KAAAkB,oBAAAS,GAAAG,IAAA9B,KAAAkB,oBAAAS,GAAAI,KACA,IAAA5C,EAAAkC,EAAAW,WAAAV,GAEA,GAAAnC,GAAA,EAEA,OADAiC,EAAApB,KAAAkB,oBAAAS,GAGA,IAAAM,EAAA9C,GAAAwC,EAAAD,GACAQ,GAAAZ,EAAAa,EAAAd,EAAAc,GAAAhD,EACAiD,GAAAd,EAAAe,EAAAhB,EAAAgB,GAAAlD,EACAmD,EAAAL,GAAA3D,EAAAoD,GACAW,EAAAhB,EAAAgB,EAAAC,EAAAF,EACAD,EAAAd,EAAAc,EAAAG,EAAAJ,EACAK,EAAAjB,EAAAe,GAAAhB,EAAAgB,EAAA,QAAAG,KAAAC,GAAAD,KAAAE,KAAAR,IAAAM,KAAAC,GAAA,SAAAD,KAAAC,GAAAD,KAAAE,KAAAR,IAAAM,KAAAC,GAeA,OAbArB,OACAuB,IAAAvB,EAAAmB,MACAnB,EAAAmB,OAGAnB,GACAU,IAAAO,EACAN,IAAAI,EACAI,MACApC,UAAA,EACAY,QAGAK,GAGAwB,yBAAA,SAAA7B,GACA,IAAA8B,KACA,QAAAzF,EAAA,EAAAqD,EAAAT,KAAAI,aAAAM,OAAmDtD,EAAAqD,EAASrD,IAC5D4C,KAAAI,aAAAhD,GAAA2D,QACA8B,EAAA/B,KAAAd,KAAAI,aAAAhD,IAGA,IAAAkE,EAAAtB,KAAAmB,6BAAAJ,GAIA,OAHAO,GACAuB,EAAA/B,KAAAQ,GAEAuB,GAGAlC,eAAA,SAAAH,GACAA,EAAAL,UAAA,EACAH,KAAAI,aAAAU,KAAAN,GACAR,KAAAM,WAGAA,QAAA,WACAN,KAAA8C,yBACA9C,KAAA+C,mBAGAD,uBAAA,WACA,IAAArC,EAAAT,KAAAI,aAAAM,OACA,QAAAtD,EAAA,EAAmBA,EAAAqD,EAASrD,IAC5B,QAAA4F,EAAA,EAAqBA,EAAAvC,EAAA,EAAArD,EAAiB4F,IACtC,GAAAhD,KAAAI,aAAA4C,GAAAjC,KAAAf,KAAAI,aAAA4C,EAAA,GAAAjC,KAAA,CACA,IAAAkC,EAAAjD,KAAAI,aAAA4C,EAAA,GACAhD,KAAAI,aAAA4C,EAAA,GAAAhD,KAAAI,aAAA4C,GACAhD,KAAAI,aAAA4C,GAAAC,IASAF,gBAAA,WACA/C,KAAAK,aACA,QAAAjD,EAAA,EAAAqD,EAAAT,KAAAI,aAAAM,OAAmDtD,EAAAqD,EAASrD,IAC5D4C,KAAAK,UAAAL,KAAAI,aAAAhD,GAAA2D,MAAA3D,KC7IO8F,EAAAzD,EAAAC,MAAAC,QAEPC,WAAA,SAAAuD,KAAAC,EAAAtD,GACAL,EAAAM,WAAAC,KAAAF,GAUAE,KAAAqD,WACArD,KAAAsD,SAAAH,GAEAnD,KAAAuD,MAAAH,EAQApD,KAAAwD,eAOAC,WAAA,WACA,OAAAzD,KAAA0D,UAGAC,WAAA,WACA,OAAA3D,KAAA4D,UAcAN,SAAA,SAAAO,GACA,GAAQzE,EAAOyE,GACf,QAAAzG,EAAA,EAAAqD,EAAAoD,EAAAnD,OAAyCtD,EAAAqD,EAASrD,IAClD4C,KAAAsD,SAAAO,EAAAzG,QAEK,MAAAyG,aAA2BrE,GAIhC,UAAAoC,MAAA,0EAHA5B,KAAAqD,QAAAvC,KAAA+C,GACA7D,KAAAwD,gBAMAM,iBAAA,SAAA/C,GACAf,KAAAuD,MAAAQ,QACA,QAAA3G,EAAA,EAAAqD,EAAAT,KAAAqD,QAAA3C,OAA8CtD,EAAAqD,EAASrD,IAAA,CACvD,IACA4G,EADAhE,KAAAqD,QAAAjG,GACAwF,yBAAA7B,GACAiD,KAAAtD,QAAAV,KAAAuD,MAAAU,UAAAD,KAIAR,YAAA,WACAxD,KAAA0D,SAAA1D,KAAAqD,QAAA,GAAArC,qBAAAD,KACAf,KAAA4D,SAAA5D,KAAAqD,QAAA,GAAApC,mBAAAF,KACA,QAAA3D,EAAA,EAAAqD,EAAAT,KAAAqD,QAAA3C,OAA8CtD,EAAAqD,EAASrD,IAAA,CACvD,IAAA8G,EAAAlE,KAAAqD,QAAAjG,GAAA4D,qBAAAD,KACAoD,EAAAnE,KAAAqD,QAAAjG,GAAA6D,mBAAAF,KACAmD,EAAAlE,KAAA0D,WACA1D,KAAA0D,SAAAQ,GAEAC,EAAAnE,KAAA4D,WACA5D,KAAA4D,SAAAO,OCtFOC,EAAA3E,EAAA4E,QAAA1E,QAEPG,SAGAwE,MAAA,GAEAC,SAAA,IAGA3E,WAAA,SAAA4E,EAAA1E,GACAL,EAAAM,WAAAC,KAAAF,GAEAE,KAAAyE,iBAAAD,EACAxE,KAAA0E,SAAA1E,KAAAyE,iBAAAd,aACA3D,KAAA2E,SAAA3E,KAAAyE,iBAAAhB,aACAzD,KAAA4E,OAAA5E,KAAAF,QAAAwE,MACAtE,KAAA6E,UAAA7E,KAAAF,QAAAyE,SACAvE,KAAA8E,YAAA,KACA9E,KAAA+E,mBAAA,GAGAC,MAAA,WACAhF,KAAA8E,cACA9E,KAAA8E,YAAArF,EAAAwF,KAAAC,iBAAAlF,KAAAmF,MAAAnF,QAGAoF,KAAA,WACApF,KAAA8E,cACArF,EAAAwF,KAAAI,gBAAArF,KAAA8E,aACA9E,KAAA8E,YAAA,KACA9E,KAAA+E,mBAAA,IAGAO,UAAA,WACAtF,KAAAoF,OACApF,KAAA2E,SAAA3E,KAAAyE,iBAAAhB,aACAzD,KAAAgF,SAGAO,UAAA,WACAvF,KAAA4E,OAAA5E,KAAA4E,QAAA,EAAA5E,KAAA4E,OAAA5E,KAAA4E,OAAA,EACA5E,KAAA8E,cACA9E,KAAAoF,OACApF,KAAAgF,UAIAQ,WAAA,WACAxF,KAAA4E,OAAA5E,KAAA4E,QAAA5E,KAAA6E,UAAA7E,KAAA4E,OAAA5E,KAAA4E,OAAA,EACA5E,KAAA8E,cACA9E,KAAAoF,OACApF,KAAAgF,UAIAS,SAAA,WACA,OAAAzF,KAAA4E,QAGAc,WAAA,WACA,OAAA1F,KAAA2E,UAGAgB,aAAA,WACA,OAAA3F,KAAAyE,iBAAAhB,cAGAmC,WAAA,WACA,OAAA5F,KAAAyE,iBAAAd,cAGAkC,UAAA,WACA,QAAA7F,KAAA8E,aAGAgB,UAAA,SAAA/E,GACAf,KAAA2E,SAAA5D,EACAf,KAAAyE,iBAAAX,iBAAA9D,KAAA2E,UACA3E,KAAA+F,KAAA,QACAhF,KAAAf,KAAA2E,YAIAqB,SAAA,SAAA1B,GACAtE,KAAA4E,OAAAN,EACAtE,KAAA8E,cACA9E,KAAAoF,OACApF,KAAAgF,UAKAiB,iBAAA,SAAAC,GACA,IAAAnF,EAOA,OALAA,EADA,IAAAf,KAAA+E,mBACA,GAEAmB,EAAAlG,KAAA+E,oBAAA,IAEA/E,KAAA+E,mBAAAmB,EACAnF,GAGAoE,MAAA,WACA,IAAAe,GAAA,IAAAC,KAEAC,GAAA,EACAC,EAFArG,KAAAiG,iBAAAC,GAEA1D,KAAA8D,IAAA,EAAAtG,KAAA4E,OAAA,GACA5E,KAAA2E,UAAA0B,EACArG,KAAA2E,UAAA3E,KAAA0E,WACA1E,KAAA2E,SAAA3E,KAAA0E,SACA0B,GAAA,GAEApG,KAAAyE,iBAAAX,iBAAA9D,KAAA2E,UACA3E,KAAA+F,KAAA,QACAhF,KAAAf,KAAA2E,WAEAyB,IAAApG,KAAA8E,YAAArF,EAAAwF,KAAAC,iBAAAlF,KAAAmF,MAAAnF,UCzHOuG,EAAA9G,EAAA+G,SAAA7G,QAEPC,WAAA,SAAAE,GACAL,EAAA+G,SAAAxH,UAAAY,WAAArC,KAAAyC,KAAAF,GACAE,KAAAF,QAAA2G,QAAA,IAGAC,MAAA,SAAAC,GACA3G,KAAA4G,WAAAnH,EAAAoH,QAAAnI,OAAA,kCAEAiI,EAAAG,QAAA9G,KAAAF,QAAAiH,MACAC,YAAAhH,KAAA4G,YAEA5G,KAAAiH,KAAAjH,KAAA4G,WAAAM,WAAA,MAEAlH,KAAAM,WAGA6G,SAAA,SAAAR,GACAlH,EAAAoH,QAAAO,OAAApH,KAAA4G,aAGAS,aAAA,WACA,OAAArH,KAAA4G,YAGAU,UAAA,WACA,OAAAtH,KAAAuH,SAGAjH,QAAA,WACA,IAAAN,KAAAwH,KAAAC,iBAAAzH,KAAAuH,QAAA,CAIA9H,EAAA+G,SAAAxH,UAAAsB,QAAA/C,KAAAyC,MAEA,IAAA0H,EAAA1H,KAAAuH,QAEAI,EAAA3H,KAAA4G,WAEAgB,EAAAF,EAAAG,UAEArK,EAAAiC,EAAAqI,QAAAC,OAAA,IAEAtI,EAAAoH,QAAAmB,YAAAL,EAAAD,EAAAO,KAGAN,EAAAO,MAAA1K,EAAAoK,EAAAvF,EACAsF,EAAAQ,OAAA3K,EAAAoK,EAAAzF,EACAwF,EAAAS,MAAAF,MAAAN,EAAAvF,EAAA,KACAsF,EAAAS,MAAAD,OAAAP,EAAAzF,EAAA,KAEA1C,EAAAqI,QAAAC,QACA/H,KAAAiH,KAAAoB,MAAA,KAIArI,KAAAiH,KAAAqB,WAAAZ,EAAAO,IAAA5F,GAAAqF,EAAAO,IAAA9F,GAGAnC,KAAA+F,KAAA,cCzDOwC,EAAA9I,EAAAC,MAAAC,QAEP6I,mBACAC,QAAA,EACAC,WAAA,EACAC,QAAA,EACAC,MAAA,UACAC,MAAA,EACAC,UAAA,UACAC,QAAA,GACAC,OAAA,GAEAC,kBACAR,QAAA,EACAE,QAAA,EACAC,MAAA,UACAM,OAAA,EACAL,MAAA,EACAC,UAAA,OACAC,QAAA,IAEAI,eACAC,QAAA,EACAC,OAAA,+BACAnB,MAAA,EACAC,OAAA,GACAS,MAAA,OACAE,UAAA,WAEAQ,gBACAC,QAAA,KACAC,UAAA,MACAC,WAAA,GAGA7J,WAAA,SAAA+G,EAAA7G,GACAE,KAAAwI,kBAAA/I,EAAAE,OAAAK,KAAAwI,kBAAA1I,EAAA0I,mBACAxI,KAAAiJ,iBAAAxJ,EAAAE,OAAAK,KAAAiJ,iBAAAnJ,EAAAmJ,kBACAjJ,KAAAmJ,cAAA1J,EAAAE,OAAAK,KAAAmJ,cAAArJ,EAAAqJ,eACAnJ,KAAAsJ,eAAA7J,EAAAE,OAAAK,KAAAsJ,eAAAxJ,EAAAwJ,gBAEAtJ,KAAA0J,gBAAA1J,KAAAiJ,iBAAAR,OACAzI,KAAA2J,eAAA3J,KAAAiJ,iBAAAR,OAEAzI,KAAAwH,KAAAb,EACA3G,KAAA4J,aAAA,IAA2BrD,GAAUsD,MAAAlD,GACrC3G,KAAA8J,QAAA9J,KAAA4J,YAAAvC,eACArH,KAAAiH,KAAAjH,KAAA8J,QAAA5C,WAAA,MACAlH,KAAA+J,iBACA/J,KAAAgK,wBAAAvK,EAAAwK,iBAAAJ,MAAAlD,GAEA3G,KAAA4J,YAAAM,GAAA,SAAAlK,KAAAmK,kBAAAnK,MACAA,KAAAwH,KAAA0C,GAAA,YAAAlK,KAAAoK,gBAAApK,OAGAqK,OAAA,WACArK,KAAAmK,qBAGAlG,UAAA,SAAAqG,GACAtK,KAAA+J,cAAAjJ,KAAAwJ,GACAtK,KAAAuK,WAAAD,IAGAE,eAAA,WACAxK,KAAA0J,iBAAA,EACA1J,KAAAqK,UAGAI,eAAA,WACAzK,KAAA0J,iBAAA,EACA1J,KAAAqK,UAGAK,cAAA,WACA1K,KAAA2J,gBAAA,EACA3J,KAAAqK,UAGAM,cAAA,WACA3K,KAAA2J,gBAAA,EACA3J,KAAAqK,UAGAjD,OAAA,WACApH,KAAA+J,iBACA/J,KAAA4J,YAAAgB,IAAA,SAAA5K,KAAAmK,kBAAAnK,MACAA,KAAAwH,KAAAoD,IAAA,YAAA5K,KAAAoK,gBAAApK,MACAA,KAAAwH,KAAAqD,SAAA7K,KAAA4J,cACA5J,KAAAwH,KAAAsD,YAAA9K,KAAA4J,aAEA5J,KAAAwH,KAAAqD,SAAA7K,KAAAgK,0BACAhK,KAAAwH,KAAAsD,YAAA9K,KAAAgK,0BAIAjG,MAAA,WACA/D,KAAA+K,cACA/K,KAAA+J,kBAGAI,kBAAA,WACAnK,KAAA+J,cAAArJ,SACAV,KAAA+K,cACA/K,KAAA+J,cAAA9J,QAAA,SAAA+K,EAAAC,GACAjL,KAAAuK,WAAAS,GAAA,IACOpM,KAAAoB,SAIPoK,gBAAA,SAAAc,GACA,IAAAlL,KAAA0J,gBACA,OAEA,IAAA7H,EAAAqJ,EAAAC,WACA,GAAAnL,KAAA+J,cAAArJ,OACA,QAAAtD,EAAA,EAAAgO,EAAApL,KAAA+J,cAAArJ,OAAuDtD,EAAAgO,EAAUhO,IACjE,QAAA4F,EAAA,EAAAvC,EAAAT,KAAA+J,cAAA3M,GAAAsD,OAA2DsC,EAAAvC,EAASuC,IAAA,CACpE,IAAAqI,EAAArL,KAAAwH,KAAA8D,mBAAA7L,EAAA8L,OAAAvL,KAAA+J,cAAA3M,GAAA4F,GAAAjB,IAAA/B,KAAA+J,cAAA3M,GAAA4F,GAAAlB,MACA,GAAAD,EAAAG,WAAAqJ,IAAArL,KAAAwI,kBAAAQ,OAEA,YADAhJ,KAAAwL,aAAAxL,KAAA+J,cAAA3M,GAAA4F,IAMAhD,KAAAwH,KAAAqD,SAAA7K,KAAAyL,WACAzL,KAAAwH,KAAAsD,YAAA9K,KAAAyL,UAEAzL,KAAA8J,QAAA1B,MAAAsD,OAAA,WAGAF,aAAA,SAAAG,GACA3L,KAAAwH,KAAAqD,SAAA7K,KAAAyL,WACAzL,KAAAwH,KAAAsD,YAAA9K,KAAAyL,UAEAzL,KAAA8J,QAAA1B,MAAAsD,OAAA,UACA,IAAAE,EAAAnM,EAAA8L,OAAAI,EAAA5J,IAAA4J,EAAA7J,KACA+J,EAAA7L,KAAAyL,SAAAhM,EAAAoM,QAAA7L,KAAAsJ,gBACAuC,EAAAC,UAAAF,GACAC,EAAAhC,MAAA7J,KAAAwH,MACAqE,EAAAE,WAAA/L,KAAAgM,gBAAAL,KAGApB,WAAA,SAAAD,GAEAtK,KAAA2J,gBACA3J,KAAAiM,eAAA3B,GAGAtK,KAAAmJ,cAAAC,OACApJ,KAAAkM,eAAA5B,IAAA5J,OAAA,IAEAV,KAAAmM,gBAAA7B,IAAA5J,OAAA,IAGAV,KAAA0J,kBACA1J,KAAAwI,kBAAAE,UACA1I,KAAAoM,uBAAA9B,GAEAtK,KAAAqM,oBAAA/B,KAKA2B,eAAA,SAAA3B,GACA,IAAAxK,EAAAE,KAAAiJ,iBACAqD,EAAAtM,KAAAwH,KAAA8D,mBAAA7L,EAAA8L,OAAAjB,EAAA,GAAAvI,IAAAuI,EAAA,GAAAxI,MACA9B,KAAAiH,KAAAsF,OACAvM,KAAAiH,KAAAuF,YAEAxM,KAAAiH,KAAAwF,OAAAH,EAAAjK,EAAAiK,EAAAnK,GACA,QAAA/E,EAAA,EAAAqD,EAAA6J,EAAA5J,OAA6CtD,EAAAqD,EAASrD,IAAA,CACtD,IAAAsP,EAAA1M,KAAAwH,KAAA8D,mBAAA7L,EAAA8L,OAAAjB,EAAAlN,GAAA2E,IAAAuI,EAAAlN,GAAA0E,MACA9B,KAAAiH,KAAA0F,OAAAD,EAAArK,EAAAqK,EAAAvK,GAEAnC,KAAAiH,KAAA2F,YAAA9M,EAAAiJ,QACAjJ,EAAA6I,SACA3I,KAAAiH,KAAA4F,YAAA/M,EAAA8I,MACA5I,KAAAiH,KAAA6F,UAAAhN,EAAAoJ,OACAlJ,KAAAiH,KAAA0B,UAEA7I,EAAA+I,OACA7I,KAAAiH,KAAA8F,UAAAjN,EAAAgJ,UACA9I,KAAAiH,KAAA4B,QAEA7I,KAAAiH,KAAA+F,WAGAZ,uBAAA,SAAA9B,GACA,IAAAxK,EAAAE,KAAAwI,kBACAxI,KAAAiH,KAAAsF,OACA,QAAAnP,EAAA,EAAAqD,EAAA6J,EAAA5J,OAA6CtD,EAAAqD,EAASrD,IACtD,GAAAkN,EAAAlN,GAAA+C,SAAA,CACA,IAAAoL,EAAA9L,EAAA8L,OAAAjB,EAAAlN,GAAA2E,IAAAuI,EAAAlN,GAAA0E,KACAkH,EAAAlJ,EAAAkJ,OACAnH,EAAA7B,KAAAwH,KAAA8D,mBAAAC,GACAvL,KAAAiH,KAAAuF,YACAxM,KAAAiH,KAAAgG,IAAApL,EAAAQ,EAAAR,EAAAM,EAAA6G,EAAA,IAAAxG,KAAAC,IAAA,GACAzC,KAAAiH,KAAA2F,YAAA9M,EAAAiJ,QACAjJ,EAAA6I,SACA3I,KAAAiH,KAAA4F,YAAA/M,EAAA8I,MACA5I,KAAAiH,KAAA0B,UAEA7I,EAAA+I,OACA7I,KAAAiH,KAAA8F,UAAAjN,EAAAgJ,UACA9I,KAAAiH,KAAA4B,QAIA7I,KAAAiH,KAAA+F,WAGAX,oBAAA,SAAA/B,GACA,QAAAlN,EAAA,EAAAqD,EAAA6J,EAAA5J,OAA6CtD,EAAAqD,EAASrD,IACtD,GAAAkN,EAAAlN,GAAA+C,SAAA,CACA,IAAAoL,EAAA9L,EAAA8L,OAAAjB,EAAAlN,GAAA2E,IAAAuI,EAAAlN,GAAA0E,KACAoL,EAAAzN,EAAA0N,aAAA5B,EAAAvL,KAAAwI,mBACA0E,EAAAE,YAAApN,KAAAgM,gBAAA1B,EAAAlN,IAAA4C,KAAAsJ,gBACAtJ,KAAAgK,wBAAAqD,SAAAH,KAKAf,gBAAA,SAAAR,GACA,IAAA9J,EAAA7B,KAAAwH,KAAA8D,mBAAA7L,EAAA8L,OAAAI,EAAA5J,IAAA4J,EAAA7J,MACAwL,EAAA3B,EAAApJ,KAAA,EACAgL,EAAAvN,KAAAmJ,cAAAjB,MACAsF,EAAAxN,KAAAmJ,cAAAhB,OACAsF,EAAAD,EAAA,EAEAxN,KAAAiH,KAAAsF,OACAvM,KAAAiH,KAAA8F,UAAA/M,KAAAmJ,cAAAL,UACA9I,KAAAiH,KAAA4F,YAAA7M,KAAAmJ,cAAAP,MACA5I,KAAAiH,KAAAqB,UAAAzG,EAAAQ,EAAAR,EAAAM,GACAnC,KAAAiH,KAAAqG,OAAA9K,KAAAC,GAAA,IAAA6K,GACAtN,KAAAiH,KAAAuF,YACAxM,KAAAiH,KAAAwF,OAAA,IAAAe,EAAA,GACAxN,KAAAiH,KAAA0F,OAAA,EAAAY,EAAA,IAAAC,EAAA,EAAAC,GACAzN,KAAAiH,KAAA0F,OAAA,EAAAY,EAAA,IAAAC,EAAA,GACAxN,KAAAiH,KAAA0F,OAAA,EAAAY,EAAA,IAAAC,EAAA,GACAxN,KAAAiH,KAAA0F,OAAA,EAAAY,EAAA,IAAAC,EAAA,EAAAC,GACAzN,KAAAiH,KAAAyG,YACA1N,KAAAiH,KAAA4B,OACA7I,KAAAiH,KAAA0B,SACA3I,KAAAiH,KAAA+F,WAGAd,eAAA,SAAAP,GACA,IAAA9J,EAAA7B,KAAAwH,KAAA8D,mBAAA7L,EAAA8L,OAAAI,EAAA5J,IAAA4J,EAAA7J,MACAS,EAAAoJ,EAAApJ,KAAA,EACA2F,EAAAlI,KAAAmJ,cAAAjB,MACAC,EAAAnI,KAAAmJ,cAAAhB,OACAoB,EACArB,EAAA,EADAqB,EAEApB,EAAA,EAEAwF,EAAA,IAAAC,OAAAC,MACAF,EAAAG,OAAA,WACA9N,KAAAiH,KAAAsF,OACAvM,KAAAiH,KAAAqB,UAAAzG,EAAAQ,EAAAR,EAAAM,GACAnC,KAAAiH,KAAAqG,OAAA9K,KAAAC,GAAA,IAAAF,GACAvC,KAAAiH,KAAA8G,UAAAJ,EAAA,EAAApE,EAAA,EAAAA,EAAArB,EAAAC,GACAnI,KAAAiH,KAAA+F,WACKpO,KAAAoB,MACL2N,EAAAK,IAAAhO,KAAAmJ,cAAAE,QAGA2C,gBAAA,SAAAiC,GACA,IAAAC,KAEA,GADAA,EAAApN,KAAA,WACAmN,EAAAE,MAAAF,EAAAE,KAAAzN,OACA,QAAAtD,EAAA,EAAAqD,EAAAwN,EAAAE,KAAAzN,OAAkDtD,EAAAqD,EAASrD,IAC3D8Q,EAAApN,KAAA,QACAoN,EAAApN,KAAA,OAAAmN,EAAAE,KAAA/Q,GAAAuB,IAAA,SACAuP,EAAApN,KAAA,OAAAmN,EAAAE,KAAA/Q,GAAAiB,MAAA,SACA6P,EAAApN,KAAA,SAKA,OAFAoN,EAAApN,KAAA,YACAoN,IAAAE,KAAA,KAIArD,YAAA,WACA,IAAAsD,EAAArO,KAAA4J,YAAAtC,YACA,GAAA+G,EAAA,CACA,IAAAzG,EAAAyG,EAAAxG,UACA7H,KAAAiH,KAAAqH,UAAAD,EAAApG,IAAA5F,EAAAgM,EAAApG,IAAA9F,EAAAyF,EAAAvF,EAAAuF,EAAAzF,QAEAnC,KAAAiH,KAAAqH,UAAA,IAAAtO,KAAA8J,QAAA5B,MAAAlI,KAAA8J,QAAA3B,QAEAnI,KAAAwH,KAAAqD,SAAA7K,KAAAgK,0BACAhK,KAAAgK,wBAAAuE,iBCpROC,EAAA/O,EAAA4E,QAAA1E,QACPC,WAAA,SAAA6O,EAAA9H,EAAA7G,MACA,IAAA4O,GACAlG,kBAAA1I,EAAA0I,kBACAS,iBAAAnJ,EAAAmJ,iBACAE,cAAArJ,EAAAqJ,cACAG,eAAAxJ,EAAAwJ,gBAEAtJ,KAAAmD,OAAAnD,KAAA2O,YAAAF,GACAzO,KAAAoD,KAAA,IAAoBmF,EAAI5B,EAAA+H,GACxB1O,KAAAwE,gBAAA,IAA+BtB,EAAelD,KAAAmD,OAAAnD,KAAAoD,MAC9CpD,KAAA4O,MAAA,IAAqBxK,EAAKpE,KAAAwE,gBAAA1E,EAAA+O,cAE1B7O,KAAA4O,MAAA1E,GAAA,OAAAgB,IACAlL,KAAA+F,KAAA,OAAAmF,MAGA5H,SAAA,aAGA0B,MAAA,WAEA,OADAhF,KAAA4O,MAAA5J,QACAhF,MAEAoF,KAAA,WAEA,OADApF,KAAA4O,MAAAxJ,OACApF,MAEAsF,UAAA,WAEA,OADAtF,KAAA4O,MAAAtJ,YACAtF,MAEAuF,UAAA,WAEA,OADAvF,KAAA4O,MAAArJ,YACAvF,MAEAwF,WAAA,WAEA,OADAxF,KAAA4O,MAAApJ,aACAxF,MAEAyF,SAAA,WACA,OAAAzF,KAAA4O,MAAAnJ,YAEAC,WAAA,WACA,OAAA1F,KAAA4O,MAAAlJ,cAEAC,aAAA,WACA,OAAA3F,KAAA4O,MAAAjJ,gBAEAC,WAAA,WACA,OAAA5F,KAAA4O,MAAAhJ,cAEAC,UAAA,WACA,OAAA7F,KAAA4O,MAAA/I,aAEAC,UAAA,SAAA/E,GAEA,OADAf,KAAA4O,MAAA9I,UAAA/E,GACAf,MAEAgG,SAAA,SAAA1B,GAEA,OADAtE,KAAA4O,MAAA5I,SAAA1B,GACAtE,MAEAwK,eAAA,WAEA,OADAxK,KAAAoD,KAAAoH,iBACAxK,MAEAyK,eAAA,WAEA,OADAzK,KAAAoD,KAAAqH,iBACAzK,MAEA0K,cAAA,WAEA,OADA1K,KAAAoD,KAAAsH,gBACA1K,MAEA2K,cAAA,WAEA,OADA3K,KAAAoD,KAAAuH,gBACA3K,MAEA8O,QAAA,WACA9O,KAAAoD,KAAAgE,UAEAuH,YAAA,SAAAF,GACA,IAAAtL,KACA,GAAQ/D,EAAYqP,GACpB,GAAUrP,EAAYqP,EAAA,IAEtB,QAAArR,EAAA,EAAAqD,EAAAgO,EAAA/N,OAA0CtD,EAAAqD,EAASrD,IACnD+F,EAAArC,KAAA,IAA0BtB,EAAKiP,EAAArR,UAI/B+F,EAAArC,KAAA,IAAwBtB,EAAKiP,IAG7B,OAAAtL,KAIO4L,EAAA,SAAAN,EAAA9H,EAAA7G,GACP,WAAA0O,EAAAC,EAAA9H,EAAA7G,ICzHA9C,EAAAU,EAAAsR,EAAA,kCAAAR,IAAAxR,EAAAU,EAAAsR,EAAA,kCAAAD,IAUAnB,OAAAnO,EAAA+O,cAAyBA,EACzBZ,OAAAnO,EAAAsP,cAAyBA","file":"leaflet.trackplayback.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export function isArray(arr) {\r\n  return Array.isArray ? Array.isArray(arr) : Object.prototype.toString.call(arr) === '[object Array]'\r\n}\r\n","import {\r\n  isArray\r\n} from './util'\r\n\r\nexport const Track = L.Class.extend({\r\n\r\n  initialize: function (trackData = [], options) {\r\n    L.setOptions(this, options)\r\n\r\n    trackData.forEach(item => {\r\n      item.isOrigin = true\r\n    })\r\n    this._trackPoints = trackData\r\n    this._timeTick = {}\r\n    this._update()\r\n  },\r\n\r\n  addTrackPoint: function (trackPoint) {\r\n    if (isArray(trackPoint)) {\r\n      for (let i = 0, len = trackPoint.length; i < len; i++) {\r\n        this.addTrackPoint(trackPoint[i])\r\n      }\r\n    }\r\n    this._addTrackPoint(trackPoint)\r\n  },\r\n\r\n  getTimes: function () {\r\n    let times = []\r\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\r\n      times.push(this._trackPoints[i].time)\r\n    }\r\n    return times\r\n  },\r\n\r\n  getStartTrackPoint: function () {\r\n    return this._trackPoints[0]\r\n  },\r\n\r\n  getEndTrackPoint: function () {\r\n    return this._trackPoints[this._trackPoints.length - 1]\r\n  },\r\n\r\n  getTrackPointByTime: function (time) {\r\n    return this._trackPoints[this._timeTick[time]]\r\n  },\r\n\r\n  getCalculateTrackPointByTime: function (time) {\r\n    // 先判断最后一个点是否为原始点\r\n    let endpoint = this.getTrackPointByTime(time)\r\n    let startPt = this.getStartTrackPoint()\r\n    let endPt = this.getEndTrackPoint()\r\n    let times = this.getTimes()\r\n    if (time < startPt.time || time > endPt.time) return\r\n    let left = 0\r\n    let right = times.length - 1\r\n    let n\r\n    // 处理只有一个点情况\r\n    if (left === right) {\r\n      return endpoint\r\n    }\r\n    while (right - left !== 1) {\r\n      n = parseInt((left + right) / 2)\r\n      if (time > times[n]) left = n\r\n      else right = n\r\n    }\r\n\r\n    let t0 = times[left]\r\n    let t1 = times[right]\r\n    let t = time\r\n    if (!this.getTrackPointByTime(t0)) {\r\n      throw new Error('data error!')\r\n    }\r\n    startPt = L.point(this.getTrackPointByTime(t0).lng, this.getTrackPointByTime(t0).lat)\r\n    endPt = L.point(this.getTrackPointByTime(t1).lng, this.getTrackPointByTime(t1).lat)\r\n    let s = startPt.distanceTo(endPt)\r\n    // 不同时间在同一个点情形\r\n    if (s <= 0) {\r\n      endpoint = this.getTrackPointByTime(t1)\r\n      return endpoint\r\n    }\r\n    let v = s / (t1 - t0)\r\n    let sinx = (endPt.y - startPt.y) / s\r\n    let cosx = (endPt.x - startPt.x) / s\r\n    let step = v * (t - t0)\r\n    let x = startPt.x + step * cosx\r\n    let y = startPt.y + step * sinx\r\n    let dir = endPt.x >= startPt.x ? (Math.PI * 0.5 - Math.asin(sinx)) * 180 / Math.PI : (Math.PI * 1.5 + Math.asin(sinx)) * 180 / Math.PI\r\n\r\n    if (endpoint) {\r\n      if (endpoint.dir === undefined) {\r\n        endpoint.dir = dir\r\n      }\r\n    } else {\r\n      endpoint = {\r\n        lng: x,\r\n        lat: y,\r\n        dir: dir,\r\n        isOrigin: false,\r\n        time: time\r\n      }\r\n    }\r\n    return endpoint\r\n  },\r\n\r\n  getTrackPointsBeforeTime: function (time) {\r\n    let tpoints = []\r\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\r\n      if (this._trackPoints[i].time < time) {\r\n        tpoints.push(this._trackPoints[i])\r\n      }\r\n    }\r\n    let endPt = this.getCalculateTrackPointByTime(time)\r\n    if (endPt) {\r\n      tpoints.push(endPt)\r\n    }\r\n    return tpoints\r\n  },\r\n\r\n  _addTrackPoint: function (trackPoint) {\r\n    trackPoint.isOrigin = true\r\n    this._trackPoints.push(trackPoint)\r\n    this._update()\r\n  },\r\n\r\n  _update: function () {\r\n    this._sortTrackPointsByTime()\r\n    this._updatetimeTick()\r\n  },\r\n\r\n  _sortTrackPointsByTime: function () {\r\n    let len = this._trackPoints.length\r\n    for (let i = 0; i < len; i++) {\r\n      for (let j = 0; j < len - 1 - i; j++) {\r\n        if (this._trackPoints[j].time > this._trackPoints[j + 1].time) {\r\n          let tmp = this._trackPoints[j + 1]\r\n          this._trackPoints[j + 1] = this._trackPoints[j]\r\n          this._trackPoints[j] = tmp\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 为轨迹点建立时间索引，优化查找性能\r\n   */\r\n  _updatetimeTick: function () {\r\n    this._timeTick = {}\r\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\r\n      this._timeTick[this._trackPoints[i].time] = i\r\n    }\r\n  }\r\n})\r\n\r\nexport const track = function (trackData, options) {\r\n  return new Track(trackData, options)\r\n}\r\n","import {\r\n  isArray\r\n} from './util'\r\nimport {\r\n  Track\r\n} from './track'\r\n\r\nexport const TrackController = L.Class.extend({\r\n\r\n  initialize: function (tracks = [], draw, options) {\r\n    L.setOptions(this, options)\r\n\r\n    // if (isArray(tracks)) {\r\n    //   this._tracks = tracks\r\n    // } else if (tracks instanceof Track) {\r\n    //   this._tracks = [tracks]\r\n    // } else {\r\n    //   throw new Error('tracks must be an instance of `Track` or an array of `Track` instance!')\r\n    // }\r\n\r\n    this._tracks = []\r\n    this.addTrack(tracks)\r\n\r\n    this._draw = draw\r\n\r\n    // this._map = map\r\n\r\n    // this._minTime = null\r\n\r\n    // this._maxTime = null\r\n\r\n    this._updateTime()\r\n\r\n    // this._caculateCount()\r\n\r\n    // this.locateToFirstTrack()\r\n  },\r\n\r\n  getMinTime: function () {\r\n    return this._minTime\r\n  },\r\n\r\n  getMaxTime: function () {\r\n    return this._maxTime\r\n  },\r\n\r\n  // locateToFirstTrack: function () {\r\n  // if (this._tracks.length) {\r\n  //   var track0 = this._tracks[0]\r\n  //   var spoint = track0.getStartTrackPoint()\r\n  //   if (spoint) {\r\n  //     var latlng = L.latLng(spoint.lat, spoint.lng)\r\n  //     this._map.panTo(latlng);\r\n  //   }\r\n  // }\r\n  // },\r\n\r\n  addTrack: function (track) {\r\n    if (isArray(track)) {\r\n      for (let i = 0, len = track.length; i < len; i++) {\r\n        this.addTrack(track[i])\r\n      }\r\n    } else if (track instanceof Track) {\r\n      this._tracks.push(track)\r\n      this._updateTime()\r\n    } else {\r\n      throw new Error('tracks must be an instance of `Track` or an array of `Track` instance!')\r\n    }\r\n  },\r\n\r\n  drawTracksByTime: function (time) {\r\n    this._draw.clear()\r\n    for (let i = 0, len = this._tracks.length; i < len; i++) {\r\n      let track = this._tracks[i]\r\n      let tps = track.getTrackPointsBeforeTime(time)\r\n      if (tps && tps.length) this._draw.drawTrack(tps)\r\n    }\r\n  },\r\n\r\n  _updateTime: function () {\r\n    this._minTime = this._tracks[0].getStartTrackPoint().time\r\n    this._maxTime = this._tracks[0].getEndTrackPoint().time\r\n    for (let i = 0, len = this._tracks.length; i < len; i++) {\r\n      let stime = this._tracks[i].getStartTrackPoint().time\r\n      let etime = this._tracks[i].getEndTrackPoint().time\r\n      if (stime < this._minTime) {\r\n        this._minTime = stime\r\n      }\r\n      if (etime > this._maxTime) {\r\n        this._maxTime = etime\r\n      }\r\n    }\r\n  },\r\n\r\n  // _caculateCount: function () {\r\n  //   var shipCount = this._tracks.length\r\n  //   var pointCount = 0\r\n  //   for (let i = 0, len = shipCount; i < len; i++) {\r\n  //     pointCount += this._tracks[i]._trackPoints.length\r\n  //   }\r\n  //   console.log('共有: ' + shipCount + '艘船;')\r\n  //   console.log('共有: ' + pointCount + '个轨迹点;')\r\n  // }\r\n\r\n})\r\n\r\nexport const trackController = function (tracks, draw, options) {\r\n  return new TrackController(tracks, draw, options)\r\n}\r\n","/**\r\n * 时钟类，控制轨迹播放动画\r\n */\r\nexport const Clock = L.Evented.extend({\r\n\r\n  options: {\r\n    // 播放速度\r\n    // 计算方法 fpstime * Math.pow(2, this._speed - 1)\r\n    speed: 13,\r\n    // 最大播放速度\r\n    maxSpeed: 65\r\n  },\r\n\r\n  initialize: function (trackController, options) {\r\n    L.setOptions(this, options)\r\n\r\n    this._trackController = trackController\r\n    this._endTime = this._trackController.getMaxTime()\r\n    this._curTime = this._trackController.getMinTime()\r\n    this._speed = this.options.speed\r\n    this._maxSpeed = this.options.maxSpeed\r\n    this._intervalID = null\r\n    this._lastFpsUpdateTime = 0\r\n  },\r\n\r\n  start: function () {\r\n    if (this._intervalID) return\r\n    this._intervalID = L.Util.requestAnimFrame(this._tick, this)\r\n  },\r\n\r\n  stop: function () {\r\n    if (!this._intervalID) return\r\n    L.Util.cancelAnimFrame(this._intervalID)\r\n    this._intervalID = null\r\n    this._lastFpsUpdateTime = 0\r\n  },\r\n\r\n  rePlaying: function () {\r\n    this.stop()\r\n    this._curTime = this._trackController.getMinTime()\r\n    this.start()\r\n  },\r\n\r\n  slowSpeed: function () {\r\n    this._speed = this._speed <= 1 ? this._speed : this._speed - 1\r\n    if (this._intervalID) {\r\n      this.stop()\r\n      this.start()\r\n    }\r\n  },\r\n\r\n  quickSpeed: function () {\r\n    this._speed = this._speed >= this._maxSpeed ? this._speed : this._speed + 1\r\n    if (this._intervalID) {\r\n      this.stop()\r\n      this.start()\r\n    }\r\n  },\r\n\r\n  getSpeed: function () {\r\n    return this._speed\r\n  },\r\n\r\n  getCurTime: function () {\r\n    return this._curTime\r\n  },\r\n\r\n  getStartTime: function () {\r\n    return this._trackController.getMinTime()\r\n  },\r\n\r\n  getEndTime: function () {\r\n    return this._trackController.getMaxTime()\r\n  },\r\n\r\n  isPlaying: function () {\r\n    return !!this._intervalID\r\n  },\r\n\r\n  setCursor: function (time) {\r\n    this._curTime = time\r\n    this._trackController.drawTracksByTime(this._curTime)\r\n    this.fire('tick', {\r\n      time: this._curTime\r\n    })\r\n  },\r\n\r\n  setSpeed: function (speed) {\r\n    this._speed = speed\r\n    if (this._intervalID) {\r\n      this.stop()\r\n      this.start()\r\n    }\r\n  },\r\n\r\n  // 计算两帧时间间隔，单位：秒\r\n  _caculatefpsTime: function (now) {\r\n    let time\r\n    if (this._lastFpsUpdateTime === 0) {\r\n      time = 0\r\n    } else {\r\n      time = (now - this._lastFpsUpdateTime) / 1000\r\n    }\r\n    this._lastFpsUpdateTime = now\r\n    return time\r\n  },\r\n\r\n  _tick: function () {\r\n    let now = +new Date()\r\n    let fpstime = this._caculatefpsTime(now)\r\n    let isPause = false\r\n    let stepTime = fpstime * Math.pow(2, this._speed - 1)\r\n    this._curTime += stepTime\r\n    if (this._curTime >= this._endTime) {\r\n      this._curTime = this._endTime\r\n      isPause = true\r\n    }\r\n    this._trackController.drawTracksByTime(this._curTime)\r\n    this.fire('tick', {\r\n      time: this._curTime\r\n    })\r\n    if (!isPause) this._intervalID = L.Util.requestAnimFrame(this._tick, this)\r\n  }\r\n})\r\n\r\nexport const clock = function (trackController, options) {\r\n  return new Clock(trackController, options)\r\n}\r\n","export const TrackLayer = L.Renderer.extend({\r\n\r\n  initialize: function (options) {\r\n    L.Renderer.prototype.initialize.call(this, options)\r\n    this.options.padding = 0.1\r\n  },\r\n\r\n  onAdd: function (map) {\r\n    this._container = L.DomUtil.create('canvas', 'leaflet-zoom-animated')\r\n\r\n    var pane = map.getPane(this.options.pane)\r\n    pane.appendChild(this._container)\r\n\r\n    this._ctx = this._container.getContext('2d')\r\n\r\n    this._update()\r\n  },\r\n\r\n  onRemove: function (map) {\r\n    L.DomUtil.remove(this._container)\r\n  },\r\n\r\n  getContainer: function () {\r\n    return this._container\r\n  },\r\n\r\n  getBounds: function () {\r\n    return this._bounds\r\n  },\r\n\r\n  _update: function () {\r\n    if (this._map._animatingZoom && this._bounds) {\r\n      return\r\n    }\r\n\r\n    L.Renderer.prototype._update.call(this)\r\n\r\n    var b = this._bounds\n\n    var container = this._container\n\n    var size = b.getSize()\n\n    var m = L.Browser.retina ? 2 : 1\r\n\r\n    L.DomUtil.setPosition(container, b.min)\r\n\r\n    // set canvas size (also clearing it); use double size on retina\r\n    container.width = m * size.x\r\n    container.height = m * size.y\r\n    container.style.width = size.x + 'px'\r\n    container.style.height = size.y + 'px'\r\n\r\n    if (L.Browser.retina) {\r\n      this._ctx.scale(2, 2)\r\n    }\r\n\r\n    // translate so we use the same path coordinates after canvas element moves\r\n    this._ctx.translate(-b.min.x, -b.min.y)\r\n\r\n    // Tell paths to redraw themselves\r\n    this.fire('update')\r\n  }\r\n})\r\n","import {\r\n  TrackLayer\r\n} from './tracklayer'\r\n\r\nexport const Draw = L.Class.extend({\r\n\r\n  trackPointOptions: {\r\n    isDraw: false,\r\n    useCanvas: true,\r\n    stroke: false,\r\n    color: '#ef0300',\r\n    fill: true,\r\n    fillColor: '#ef0300',\r\n    opacity: 0.3,\r\n    radius: 4\r\n  },\r\n  trackLineOptions: {\r\n    isDraw: false,\r\n    stroke: true,\r\n    color: '#1C54E2', // stroke color\r\n    weight: 2,\r\n    fill: false,\r\n    fillColor: '#000',\r\n    opacity: 0.3\r\n  },\r\n  targetOptions: {\r\n    useImg: false,\r\n    imgUrl: '../../static/images/ship.png',\r\n    width: 8,\r\n    height: 18,\r\n    color: '#00f', // stroke color\r\n    fillColor: '#9FD12D'\r\n  },\r\n  toolTipOptions: {\r\n    offset: [0, 0],\r\n    direction: 'top',\r\n    permanent: false\r\n  },\r\n\r\n  initialize: function (map, options) {\r\n    this.trackPointOptions = L.extend(this.trackPointOptions, options.trackPointOptions)\r\n    this.trackLineOptions = L.extend(this.trackLineOptions, options.trackLineOptions)\r\n    this.targetOptions = L.extend(this.targetOptions, options.targetOptions)\r\n    this.toolTipOptions = L.extend(this.toolTipOptions, options.toolTipOptions)\r\n\r\n    this._showTrackPoint = this.trackLineOptions.isDraw\r\n    this._showTrackLine = this.trackLineOptions.isDraw\r\n\r\n    this._map = map\r\n    this._trackLayer = new TrackLayer().addTo(map)\r\n    this._canvas = this._trackLayer.getContainer()\r\n    this._ctx = this._canvas.getContext('2d')\r\n    this._bufferTracks = []\r\n    this._trackPointFeatureGroup = L.featureGroup([]).addTo(map)\r\n\r\n    this._trackLayer.on('update', this._trackLayerUpdate, this)\r\n    this._map.on('mousemove', this._onmousemoveEvt, this)\r\n  },\r\n\r\n  update: function () {\r\n    this._trackLayerUpdate()\r\n  },\r\n\r\n  drawTrack: function (trackpoints) {\r\n    this._bufferTracks.push(trackpoints)\r\n    this._drawTrack(trackpoints)\r\n  },\r\n\r\n  showTrackPoint: function () {\r\n    this._showTrackPoint = true\r\n    this.update()\r\n  },\r\n\r\n  hideTrackPoint: function () {\r\n    this._showTrackPoint = false\r\n    this.update()\r\n  },\r\n\r\n  showTrackLine: function () {\r\n    this._showTrackLine = true\r\n    this.update()\r\n  },\r\n\r\n  hideTrackLine: function () {\r\n    this._showTrackLine = false\r\n    this.update()\r\n  },\r\n\r\n  remove: function () {\r\n    this._bufferTracks = []\r\n    this._trackLayer.off('update', this._trackLayerUpdate, this)\r\n    this._map.off('mousemove', this._onmousemoveEvt, this)\r\n    if (this._map.hasLayer(this._trackLayer)) {\r\n      this._map.removeLayer(this._trackLayer)\r\n    }\r\n    if (this._map.hasLayer(this._trackPointFeatureGroup)) {\r\n      this._map.removeLayer(this._trackPointFeatureGroup)\r\n    }\r\n  },\r\n\r\n  clear: function () {\r\n    this._clearLayer()\r\n    this._bufferTracks = []\r\n  },\r\n\r\n  _trackLayerUpdate: function () {\r\n    if (this._bufferTracks.length) {\r\n      this._clearLayer()\r\n      this._bufferTracks.forEach(function (element, index) {\r\n        this._drawTrack(element, false)\r\n      }.bind(this))\r\n    }\r\n  },\r\n\r\n  _onmousemoveEvt: function (e) {\r\n    if (!this._showTrackPoint) {\r\n      return\r\n    }\r\n    let point = e.layerPoint\r\n    if (this._bufferTracks.length) {\r\n      for (let i = 0, leni = this._bufferTracks.length; i < leni; i++) {\r\n        for (let j = 0, len = this._bufferTracks[i].length; j < len; j++) {\r\n          let tpoint = this._map.latLngToLayerPoint(L.latLng(this._bufferTracks[i][j].lat, this._bufferTracks[i][j].lng))\r\n          if (point.distanceTo(tpoint) <= this.trackPointOptions.radius) {\r\n            this._opentoolTip(this._bufferTracks[i][j])\r\n            return\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this._map.hasLayer(this._tooltip)) {\r\n      this._map.removeLayer(this._tooltip)\r\n    }\r\n    this._canvas.style.cursor = 'pointer'\r\n  },\r\n\r\n  _opentoolTip: function (trackpoint) {\r\n    if (this._map.hasLayer(this._tooltip)) {\r\n      this._map.removeLayer(this._tooltip)\r\n    }\r\n    this._canvas.style.cursor = 'default'\r\n    let latlng = L.latLng(trackpoint.lat, trackpoint.lng)\r\n    let tooltip = this._tooltip = L.tooltip(this.toolTipOptions)\r\n    tooltip.setLatLng(latlng)\r\n    tooltip.addTo(this._map)\r\n    tooltip.setContent(this._getTooltipText(trackpoint))\r\n  },\r\n\r\n  _drawTrack: function (trackpoints) {\r\n    // 画轨迹线\r\n    if (this._showTrackLine) {\r\n      this._drawTrackLine(trackpoints)\r\n    }\r\n    // 画船\r\n    if (this.targetOptions.useImg) {\r\n      this._drawShipImage(trackpoints[trackpoints.length - 1])\r\n    } else {\r\n      this._drawShipCanvas(trackpoints[trackpoints.length - 1])\r\n    }\r\n    // 画经过的轨迹点\r\n    if (this._showTrackPoint) {\r\n      if (this.trackPointOptions.useCanvas) {\r\n        this._drawTrackPointsCanvas(trackpoints)\r\n      } else {\r\n        this._drawTrackPointsSvg(trackpoints)\r\n      }\r\n    }\r\n  },\r\n\r\n  _drawTrackLine: function (trackpoints) {\r\n    let options = this.trackLineOptions\r\n    let tp0 = this._map.latLngToLayerPoint(L.latLng(trackpoints[0].lat, trackpoints[0].lng))\r\n    this._ctx.save()\r\n    this._ctx.beginPath()\r\n    // 画轨迹线\r\n    this._ctx.moveTo(tp0.x, tp0.y)\r\n    for (let i = 1, len = trackpoints.length; i < len; i++) {\r\n      let tpi = this._map.latLngToLayerPoint(L.latLng(trackpoints[i].lat, trackpoints[i].lng))\r\n      this._ctx.lineTo(tpi.x, tpi.y)\r\n    }\r\n    this._ctx.globalAlpha = options.opacity\r\n    if (options.stroke) {\r\n      this._ctx.strokeStyle = options.color\r\n      this._ctx.lineWidth = options.weight\r\n      this._ctx.stroke()\r\n    }\r\n    if (options.fill) {\r\n      this._ctx.fillStyle = options.fillColor\r\n      this._ctx.fill()\r\n    }\r\n    this._ctx.restore()\r\n  },\r\n\r\n  _drawTrackPointsCanvas: function (trackpoints) {\r\n    let options = this.trackPointOptions\r\n    this._ctx.save()\r\n    for (let i = 0, len = trackpoints.length; i < len; i++) {\r\n      if (trackpoints[i].isOrigin) {\r\n        let latLng = L.latLng(trackpoints[i].lat, trackpoints[i].lng)\r\n        let radius = options.radius\r\n        let point = this._map.latLngToLayerPoint(latLng)\r\n        this._ctx.beginPath()\r\n        this._ctx.arc(point.x, point.y, radius, 0, Math.PI * 2, false)\r\n        this._ctx.globalAlpha = options.opacity\r\n        if (options.stroke) {\r\n          this._ctx.strokeStyle = options.color\r\n          this._ctx.stroke()\r\n        }\r\n        if (options.fill) {\r\n          this._ctx.fillStyle = options.fillColor\r\n          this._ctx.fill()\r\n        }\r\n      }\r\n    }\r\n    this._ctx.restore()\r\n  },\r\n\r\n  _drawTrackPointsSvg: function (trackpoints) {\r\n    for (let i = 0, len = trackpoints.length; i < len; i++) {\r\n      if (trackpoints[i].isOrigin) {\r\n        let latLng = L.latLng(trackpoints[i].lat, trackpoints[i].lng)\r\n        let cricleMarker = L.circleMarker(latLng, this.trackPointOptions)\r\n        cricleMarker.bindTooltip(this._getTooltipText(trackpoints[i]), this.toolTipOptions)\r\n        this._trackPointFeatureGroup.addLayer(cricleMarker)\r\n      }\r\n    }\r\n  },\r\n\r\n  _drawShipCanvas: function (trackpoint) {\r\n    let point = this._map.latLngToLayerPoint(L.latLng(trackpoint.lat, trackpoint.lng))\r\n    let rotate = trackpoint.dir || 0\r\n    let w = this.targetOptions.width\r\n    let h = this.targetOptions.height\r\n    let dh = h / 3\r\n\r\n    this._ctx.save()\r\n    this._ctx.fillStyle = this.targetOptions.fillColor\r\n    this._ctx.strokeStyle = this.targetOptions.color\r\n    this._ctx.translate(point.x, point.y)\r\n    this._ctx.rotate((Math.PI / 180) * rotate)\r\n    this._ctx.beginPath()\r\n    this._ctx.moveTo(0, 0 - h / 2)\r\n    this._ctx.lineTo(0 - w / 2, 0 - h / 2 + dh)\r\n    this._ctx.lineTo(0 - w / 2, 0 + h / 2)\r\n    this._ctx.lineTo(0 + w / 2, 0 + h / 2)\r\n    this._ctx.lineTo(0 + w / 2, 0 - h / 2 + dh)\r\n    this._ctx.closePath()\r\n    this._ctx.fill()\r\n    this._ctx.stroke()\r\n    this._ctx.restore()\r\n  },\r\n\r\n  _drawShipImage: function (trackpoint) {\r\n    let point = this._map.latLngToLayerPoint(L.latLng(trackpoint.lat, trackpoint.lng))\r\n    let dir = trackpoint.dir || 0\r\n    let width = this.targetOptions.width\r\n    let height = this.targetOptions.height\r\n    let offset = {\r\n      x: width / 2,\r\n      y: height / 2\r\n    }\r\n    let img = new window.Image()\r\n    img.onload = function () {\r\n      this._ctx.save()\r\n      this._ctx.translate(point.x, point.y)\r\n      this._ctx.rotate((Math.PI / 180) * dir)\r\n      this._ctx.drawImage(img, 0 - offset.x, 0 - offset.y, width, height)\r\n      this._ctx.restore()\r\n    }.bind(this)\r\n    img.src = this.targetOptions.imgUrl\r\n  },\r\n\r\n  _getTooltipText: function (targetobj) {\r\n    let content = []\r\n    content.push('<table>')\r\n    if (targetobj.info && targetobj.info.length) {\r\n      for (let i = 0, len = targetobj.info.length; i < len; i++) {\r\n        content.push('<tr>')\r\n        content.push('<td>' + targetobj.info[i].key + '</td>')\r\n        content.push('<td>' + targetobj.info[i].value + '</td>')\r\n        content.push('</tr>')\r\n      }\r\n    }\r\n    content.push('</table>')\r\n    content = content.join('')\r\n    return content\r\n  },\r\n\r\n  _clearLayer: function () {\r\n    let bounds = this._trackLayer.getBounds()\r\n    if (bounds) {\r\n      let size = bounds.getSize()\r\n      this._ctx.clearRect(bounds.min.x, bounds.min.y, size.x, size.y)\r\n    } else {\r\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height)\r\n    }\r\n    if (this._map.hasLayer(this._trackPointFeatureGroup)) {\r\n      this._trackPointFeatureGroup.clearLayers()\r\n    }\r\n  }\r\n})\r\n\r\nexport const draw = function (map, options) {\r\n  return new Draw(map, options)\r\n}\r\n","import {\r\n  Track\r\n} from './track'\r\nimport {\r\n  TrackController\r\n} from './trackcontroller'\r\nimport {\r\n  Clock\r\n} from './clock'\r\nimport {\r\n  Draw\r\n} from './draw'\r\nimport * as Util from './util'\r\n\r\n/**\r\n * single track data\r\n * [{lat: 30, lng: 116, time: 1502529980, heading: 300, info:[]},{},....]\r\n *\r\n * mutiple track data\r\n * [single track data, single track data, single track data]\r\n */\r\nexport const TrackPlayBack = L.Evented.extend({\r\n  initialize: function (data, map, options = {}) {\r\n    let drawOptions = {\r\n      trackPointOptions: options.trackPointOptions,\r\n      trackLineOptions: options.trackLineOptions,\r\n      targetOptions: options.targetOptions,\r\n      toolTipOptions: options.toolTipOptions\r\n    }\r\n    this.tracks = this._initTracks(data)\r\n    this.draw = new Draw(map, drawOptions)\r\n    this.trackController = new TrackController(this.tracks, this.draw)\r\n    this.clock = new Clock(this.trackController, options.clockOptions)\r\n\r\n    this.clock.on('tick', e => {\r\n      this.fire('tick', e)\r\n    })\r\n  },\r\n  addTrack: function () {\r\n\r\n  },\r\n  start: function () {\r\n    this.clock.start()\r\n    return this\r\n  },\r\n  stop: function () {\r\n    this.clock.stop()\r\n    return this\r\n  },\r\n  rePlaying: function () {\r\n    this.clock.rePlaying()\r\n    return this\r\n  },\r\n  slowSpeed: function () {\r\n    this.clock.slowSpeed()\r\n    return this\r\n  },\r\n  quickSpeed: function () {\r\n    this.clock.quickSpeed()\r\n    return this\r\n  },\r\n  getSpeed: function () {\r\n    return this.clock.getSpeed()\r\n  },\r\n  getCurTime: function () {\r\n    return this.clock.getCurTime()\r\n  },\r\n  getStartTime: function () {\r\n    return this.clock.getStartTime()\r\n  },\r\n  getEndTime: function () {\r\n    return this.clock.getEndTime()\r\n  },\r\n  isPlaying: function () {\r\n    return this.clock.isPlaying()\r\n  },\r\n  setCursor: function (time) {\r\n    this.clock.setCursor(time)\r\n    return this\r\n  },\r\n  setSpeed: function (speed) {\r\n    this.clock.setSpeed(speed)\r\n    return this\r\n  },\r\n  showTrackPoint: function () {\r\n    this.draw.showTrackPoint()\r\n    return this\r\n  },\r\n  hideTrackPoint: function () {\r\n    this.draw.hideTrackPoint()\r\n    return this\r\n  },\r\n  showTrackLine: function () {\r\n    this.draw.showTrackLine()\r\n    return this\r\n  },\r\n  hideTrackLine: function () {\r\n    this.draw.hideTrackLine()\r\n    return this\r\n  },\r\n  dispose: function () {\r\n    this.draw.remove()\r\n  },\r\n  _initTracks: function (data) {\r\n    let tracks = []\r\n    if (Util.isArray(data)) {\r\n      if (Util.isArray(data[0])) {\r\n        // 多条轨迹\r\n        for (let i = 0, len = data.length; i < len; i++) {\r\n          tracks.push(new Track(data[i]))\r\n        }\r\n      } else {\r\n        // 单条轨迹\r\n        tracks.push(new Track(data))\r\n      }\r\n    }\r\n    return tracks\r\n  }\r\n})\r\n\r\nexport const trackplayback = function (data, map, options) {\r\n  return new TrackPlayBack(data, map, options)\r\n}\r\n","import {\r\n  TrackPlayBack,\r\n  trackplayback\r\n} from './trackplayback'\r\n\r\nexport {\r\n  TrackPlayBack,\r\n  trackplayback\r\n}\r\n\r\nwindow.L.TrackPlayBack = TrackPlayBack\r\nwindow.L.trackplayback = trackplayback\r\n"],"sourceRoot":""}