{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/leaflet.trackplayback/util.js","webpack:///./src/leaflet.trackplayback/track.js","webpack:///./src/leaflet.trackplayback/trackcontroller.js","webpack:///./src/leaflet.trackplayback/clock.js","webpack:///./src/leaflet.trackplayback/tracklayer.js","webpack:///./src/leaflet.trackplayback/draw.js","webpack:///./src/leaflet.trackplayback/trackplayback.js","webpack:///./src/leaflet.trackplayback/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isArray","arr","Array","toString","Track","L","Class","extend","initialize","trackData","options","setOptions","this","forEach","item","isOrigin","_trackPoints","_timeTick","_update","addTrackPoint","trackPoint","len","length","_addTrackPoint","getTimes","times","push","time","getStartTrackPoint","getEndTrackPoint","getTrackPointByTime","_getCalculateTrackPointByTime","endpoint","startPt","endPt","left","right","parseInt","t0","t1","p0","p1","point","lng","lat","distanceTo","v","sinx","y","cosx","x","step","dir","Math","PI","asin","undefined","getTrackPointsBeforeTime","tpoints","_sortTrackPointsByTime","_updatetimeTick","j","tmp","TrackController","tracks","draw","_tracks","addTrack","_draw","_updateTime","getMinTime","_minTime","getMaxTime","_maxTime","track","Error","drawTracksByTime","clear","tps","drawTrack","stime","etime","Clock","includes","Mixin","Events","speed","maxSpeed","trackController","_trackController","_endTime","_curTime","_speed","_maxSpeed","_intervalID","_lastFpsUpdateTime","start","Util","requestAnimFrame","_tick","stop","cancelAnimFrame","rePlaying","slowSpeed","quickSpeed","getSpeed","getCurTime","getStartTime","getEndTime","isPlaying","setCursor","fire","setSpeed","_caculatefpsTime","now","Date","isPause","stepTime","pow","TrackLayer","Renderer","padding","onAdd","map","_container","DomUtil","getPane","pane","appendChild","_ctx","getContext","onRemove","remove","getContainer","getBounds","_bounds","_map","_animatingZoom","b","container","size","getSize","Browser","retina","setPosition","min","width","height","style","scale","translate","Draw","trackPointOptions","isDraw","useCanvas","stroke","color","fill","fillColor","opacity","radius","trackLineOptions","weight","targetOptions","useImg","imgUrl","toolTipOptions","offset","direction","permanent","_showTrackPoint","_showTrackLine","on","_onmousemoveEvt","_trackLayer","addTo","_trackLayerUpdate","_canvas","_bufferTracks","_trackPointFeatureGroup","featureGroup","img","Image","onload","_targetImg","onerror","src","update","trackpoints","_drawTrack","showTrackPoint","hideTrackPoint","showTrackLine","hideTrackLine","off","hasLayer","removeLayer","_clearLayer","element","index","e","layerPoint","leni","tpoint","_getLayerPoint","_opentoolTip","_tooltip","cursor","trackpoint","latlng","latLng","tooltip","setLatLng","setContent","_getTooltipText","_drawTrackLine","targetPoint","_drawShipImage","_drawShipCanvas","_drawTrackPointsCanvas","_drawTrackPointsSvg","tp0","save","beginPath","moveTo","tpi","lineTo","globalAlpha","strokeStyle","lineWidth","fillStyle","restore","latLngToLayerPoint","arc","cricleMarker","circleMarker","bindTooltip","addLayer","rotate","w","h","dh","closePath","drawImage","targetobj","content","info","join","bounds","clearRect","clearLayers","[object Object]","TrackPlayBack","data","drawOptions","_initTracks","clock","clockOptions","dispose","trackplayback","__webpack_exports__","window"],"mappings":"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","file":"leaflet.trackplayback.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export function isArray (arr) {\r\n  return Array.isArray ? Array.isArray(arr) : Object.prototype.toString.call(arr) === '[object Array]'\r\n}\r\n","import {\r\n  isArray\r\n} from './util'\r\n\r\n/**\r\n * 轨迹类\r\n */\r\nexport const Track = L.Class.extend({\r\n\r\n  initialize: function (trackData = [], options) {\r\n    L.setOptions(this, options)\r\n\r\n    trackData.forEach(item => {\r\n      // 添加 isOrigin 字段用来标识是否是原始采样点，与插值点区分开\r\n      item.isOrigin = true\r\n    })\r\n    this._trackPoints = trackData\r\n    this._timeTick = {}\r\n    this._update()\r\n  },\r\n\r\n  addTrackPoint: function (trackPoint) {\r\n    if (isArray(trackPoint)) {\r\n      for (let i = 0, len = trackPoint.length; i < len; i++) {\r\n        this.addTrackPoint(trackPoint[i])\r\n      }\r\n    }\r\n    this._addTrackPoint(trackPoint)\r\n  },\r\n\r\n  getTimes: function () {\r\n    let times = []\r\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\r\n      times.push(this._trackPoints[i].time)\r\n    }\r\n    return times\r\n  },\r\n\r\n  getStartTrackPoint: function () {\r\n    return this._trackPoints[0]\r\n  },\r\n\r\n  getEndTrackPoint: function () {\r\n    return this._trackPoints[this._trackPoints.length - 1]\r\n  },\r\n\r\n  getTrackPointByTime: function (time) {\r\n    return this._trackPoints[this._timeTick[time]]\r\n  },\r\n\r\n  _getCalculateTrackPointByTime: function (time) {\r\n    // 先判断最后一个点是否为原始点\r\n    let endpoint = this.getTrackPointByTime(time)\r\n    let startPt = this.getStartTrackPoint()\r\n    let endPt = this.getEndTrackPoint()\r\n    let times = this.getTimes()\r\n    if (time < startPt.time || time > endPt.time) return\r\n    let left = 0\r\n    let right = times.length - 1\r\n    let n\r\n    // 处理只有一个点情况\r\n    if (left === right) {\r\n      return endpoint\r\n    }\r\n    // 通过【二分查找】法查出当前时间所在的时间区间\r\n    while (right - left !== 1) {\r\n      n = parseInt((left + right) / 2)\r\n      if (time > times[n]) left = n\r\n      else right = n\r\n    }\r\n\r\n    let t0 = times[left]\r\n    let t1 = times[right]\r\n    let t = time\r\n    let p0 = this.getTrackPointByTime(t0)\r\n    let p1 = this.getTrackPointByTime(t1)\r\n    startPt = L.point(p0.lng, p0.lat)\r\n    endPt = L.point(p1.lng, p1.lat)\r\n    let s = startPt.distanceTo(endPt)\r\n    // 不同时间在同一个点情形\r\n    if (s <= 0) {\r\n      endpoint = p1\r\n      return endpoint\r\n    }\r\n    // 假设目标在两点间做匀速直线运动\r\n    // 求解速度向量，并计算时间 t 目标所在位置\r\n    let v = s / (t1 - t0)\r\n    let sinx = (endPt.y - startPt.y) / s\r\n    let cosx = (endPt.x - startPt.x) / s\r\n    let step = v * (t - t0)\r\n    let x = startPt.x + step * cosx\r\n    let y = startPt.y + step * sinx\r\n    // 求目标的运动方向，0-360度\r\n    let dir = endPt.x >= startPt.x ? (Math.PI * 0.5 - Math.asin(sinx)) * 180 / Math.PI : (Math.PI * 1.5 + Math.asin(sinx)) * 180 / Math.PI\r\n\r\n    if (endpoint) {\r\n      if (endpoint.dir === undefined) {\r\n        endpoint.dir = dir\r\n      }\r\n    } else {\r\n      endpoint = {\r\n        lng: x,\r\n        lat: y,\r\n        dir: dir,\r\n        isOrigin: false,\r\n        time: time\r\n      }\r\n    }\r\n    return endpoint\r\n  },\r\n\r\n  // 获取某个时间点之前走过的轨迹\r\n  getTrackPointsBeforeTime: function (time) {\r\n    let tpoints = []\r\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\r\n      if (this._trackPoints[i].time < time) {\r\n        tpoints.push(this._trackPoints[i])\r\n      }\r\n    }\r\n    // 获取最后一个点，根据时间线性插值而来\r\n    let endPt = this._getCalculateTrackPointByTime(time)\r\n    if (endPt) {\r\n      tpoints.push(endPt)\r\n    }\r\n    return tpoints\r\n  },\r\n\r\n  _addTrackPoint: function (trackPoint) {\r\n    trackPoint.isOrigin = true\r\n    this._trackPoints.push(trackPoint)\r\n    this._update()\r\n  },\r\n\r\n  _update: function () {\r\n    this._sortTrackPointsByTime()\r\n    this._updatetimeTick()\r\n  },\r\n\r\n  // 轨迹点按时间排序 【冒泡排序】\r\n  _sortTrackPointsByTime: function () {\r\n    let len = this._trackPoints.length\r\n    for (let i = 0; i < len; i++) {\r\n      for (let j = 0; j < len - 1 - i; j++) {\r\n        if (this._trackPoints[j].time > this._trackPoints[j + 1].time) {\r\n          let tmp = this._trackPoints[j + 1]\r\n          this._trackPoints[j + 1] = this._trackPoints[j]\r\n          this._trackPoints[j] = tmp\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  // 为轨迹点建立时间索引，优化查找性能\r\n  _updatetimeTick: function () {\r\n    this._timeTick = {}\r\n    for (let i = 0, len = this._trackPoints.length; i < len; i++) {\r\n      this._timeTick[this._trackPoints[i].time] = i\r\n    }\r\n  }\r\n})\r\n\r\nexport const track = function (trackData, options) {\r\n  return new Track(trackData, options)\r\n}\r\n","import {\r\n  isArray\r\n} from './util'\r\nimport {\r\n  Track\r\n} from './track'\r\n\r\n/**\r\n * 控制器类\r\n * 控制轨迹和绘制\r\n */\r\nexport const TrackController = L.Class.extend({\r\n\r\n  initialize: function (tracks = [], draw, options) {\r\n    L.setOptions(this, options)\r\n\r\n    this._tracks = []\r\n    this.addTrack(tracks)\r\n\r\n    this._draw = draw\r\n\r\n    this._updateTime()\r\n  },\r\n\r\n  getMinTime: function () {\r\n    return this._minTime\r\n  },\r\n\r\n  getMaxTime: function () {\r\n    return this._maxTime\r\n  },\r\n\r\n  addTrack: function (track) {\r\n    if (isArray(track)) {\r\n      for (let i = 0, len = track.length; i < len; i++) {\r\n        this.addTrack(track[i])\r\n      }\r\n    } else if (track instanceof Track) {\r\n      this._tracks.push(track)\r\n      this._updateTime()\r\n    } else {\r\n      throw new Error('tracks must be an instance of `Track` or an array of `Track` instance!')\r\n    }\r\n  },\r\n\r\n  drawTracksByTime: function (time) {\r\n    this._draw.clear()\r\n    for (let i = 0, len = this._tracks.length; i < len; i++) {\r\n      let track = this._tracks[i]\r\n      let tps = track.getTrackPointsBeforeTime(time)\r\n      if (tps && tps.length) this._draw.drawTrack(tps)\r\n    }\r\n  },\r\n\r\n  _updateTime: function () {\r\n    this._minTime = this._tracks[0].getStartTrackPoint().time\r\n    this._maxTime = this._tracks[0].getEndTrackPoint().time\r\n    for (let i = 0, len = this._tracks.length; i < len; i++) {\r\n      let stime = this._tracks[i].getStartTrackPoint().time\r\n      let etime = this._tracks[i].getEndTrackPoint().time\r\n      if (stime < this._minTime) {\r\n        this._minTime = stime\r\n      }\r\n      if (etime > this._maxTime) {\r\n        this._maxTime = etime\r\n      }\r\n    }\r\n  }\r\n\r\n})\r\n\r\nexport const trackController = function (tracks, draw, options) {\r\n  return new TrackController(tracks, draw, options)\r\n}\r\n","/**\r\n * 时钟类，控制轨迹播放动画\r\n */\r\nexport const Clock = L.Class.extend({\r\n\r\n  includes: L.Mixin.Events,\r\n\r\n  options: {\r\n    // 播放速度\r\n    // 计算方法 fpstime * Math.pow(2, this._speed - 1)\r\n    speed: 12,\r\n    // 最大播放速度\r\n    maxSpeed: 65\r\n  },\r\n\r\n  initialize: function (trackController, options) {\r\n    L.setOptions(this, options)\r\n\r\n    this._trackController = trackController\r\n    this._endTime = this._trackController.getMaxTime()\r\n    this._curTime = this._trackController.getMinTime()\r\n    this._speed = this.options.speed\r\n    this._maxSpeed = this.options.maxSpeed\r\n    this._intervalID = null\r\n    this._lastFpsUpdateTime = 0\r\n  },\r\n\r\n  start: function () {\r\n    if (this._intervalID) return\r\n    this._intervalID = L.Util.requestAnimFrame(this._tick, this)\r\n  },\r\n\r\n  stop: function () {\r\n    if (!this._intervalID) return\r\n    L.Util.cancelAnimFrame(this._intervalID)\r\n    this._intervalID = null\r\n    this._lastFpsUpdateTime = 0\r\n  },\r\n\r\n  rePlaying: function () {\r\n    this.stop()\r\n    this._curTime = this._trackController.getMinTime()\r\n    this.start()\r\n  },\r\n\r\n  slowSpeed: function () {\r\n    this._speed = this._speed <= 1 ? this._speed : this._speed - 1\r\n    if (this._intervalID) {\r\n      this.stop()\r\n      this.start()\r\n    }\r\n  },\r\n\r\n  quickSpeed: function () {\r\n    this._speed = this._speed >= this._maxSpeed ? this._speed : this._speed + 1\r\n    if (this._intervalID) {\r\n      this.stop()\r\n      this.start()\r\n    }\r\n  },\r\n\r\n  getSpeed: function () {\r\n    return this._speed\r\n  },\r\n\r\n  getCurTime: function () {\r\n    return this._curTime\r\n  },\r\n\r\n  getStartTime: function () {\r\n    return this._trackController.getMinTime()\r\n  },\r\n\r\n  getEndTime: function () {\r\n    return this._trackController.getMaxTime()\r\n  },\r\n\r\n  isPlaying: function () {\r\n    return !!this._intervalID\r\n  },\r\n\r\n  setCursor: function (time) {\r\n    this._curTime = time\r\n    this._trackController.drawTracksByTime(this._curTime)\r\n    this.fire('tick', {\r\n      time: this._curTime\r\n    })\r\n  },\r\n\r\n  setSpeed: function (speed) {\r\n    this._speed = speed\r\n    if (this._intervalID) {\r\n      this.stop()\r\n      this.start()\r\n    }\r\n  },\r\n\r\n  // 计算两帧时间间隔，单位：秒\r\n  _caculatefpsTime: function (now) {\r\n    let time\r\n    if (this._lastFpsUpdateTime === 0) {\r\n      time = 0\r\n    } else {\r\n      time = now - this._lastFpsUpdateTime\r\n    }\r\n    this._lastFpsUpdateTime = now\r\n    // 将毫秒转换成秒\r\n    time = time / 1000\r\n    return time\r\n  },\r\n\r\n  _tick: function () {\r\n    let now = +new Date()\r\n    let fpstime = this._caculatefpsTime(now)\r\n    let isPause = false\r\n    let stepTime = fpstime * Math.pow(2, this._speed - 1)\r\n    this._curTime += stepTime\r\n    if (this._curTime >= this._endTime) {\r\n      this._curTime = this._endTime\r\n      isPause = true\r\n    }\r\n    this._trackController.drawTracksByTime(this._curTime)\r\n    this.fire('tick', {\r\n      time: this._curTime\r\n    })\r\n    if (!isPause) this._intervalID = L.Util.requestAnimFrame(this._tick, this)\r\n  }\r\n})\r\n\r\nexport const clock = function (trackController, options) {\r\n  return new Clock(trackController, options)\r\n}\r\n","/**\r\n * 轨迹图层\r\n */\r\nexport const TrackLayer = L.Renderer.extend({\r\n\r\n  initialize: function (options) {\r\n    L.Renderer.prototype.initialize.call(this, options)\r\n    this.options.padding = 0.1\r\n  },\r\n\r\n  onAdd: function (map) {\r\n    this._container = L.DomUtil.create('canvas', 'leaflet-zoom-animated')\r\n\r\n    var pane = map.getPane(this.options.pane)\r\n    pane.appendChild(this._container)\r\n\r\n    this._ctx = this._container.getContext('2d')\r\n\r\n    this._update()\r\n  },\r\n\r\n  onRemove: function (map) {\r\n    L.DomUtil.remove(this._container)\r\n  },\r\n\r\n  getContainer: function () {\r\n    return this._container\r\n  },\r\n\r\n  getBounds: function () {\r\n    return this._bounds\r\n  },\r\n\r\n  _update: function () {\r\n    if (this._map._animatingZoom && this._bounds) {\r\n      return\r\n    }\r\n\r\n    L.Renderer.prototype._update.call(this)\r\n\r\n    var b = this._bounds\r\n\r\n    var container = this._container\r\n\r\n    var size = b.getSize()\r\n\r\n    var m = L.Browser.retina ? 2 : 1\r\n\r\n    L.DomUtil.setPosition(container, b.min)\r\n\r\n    // set canvas size (also clearing it); use double size on retina\r\n    container.width = m * size.x\r\n    container.height = m * size.y\r\n    container.style.width = size.x + 'px'\r\n    container.style.height = size.y + 'px'\r\n\r\n    if (L.Browser.retina) {\r\n      this._ctx.scale(2, 2)\r\n    }\r\n\r\n    // translate so we use the same path coordinates after canvas element moves\r\n    this._ctx.translate(-b.min.x, -b.min.y)\r\n\r\n    // Tell paths to redraw themselves\r\n    this.fire('update')\r\n  }\r\n})\r\n","import {\r\n  TrackLayer\r\n} from './tracklayer'\r\n\r\n/**\r\n * 绘制类\r\n * 完成轨迹线、轨迹点、目标物的绘制工作\r\n */\r\nexport const Draw = L.Class.extend({\r\n\r\n  trackPointOptions: {\r\n    isDraw: false,\r\n    useCanvas: true,\r\n    stroke: false,\r\n    color: '#ef0300',\r\n    fill: true,\r\n    fillColor: '#ef0300',\r\n    opacity: 0.3,\r\n    radius: 4\r\n  },\r\n  trackLineOptions: {\r\n    isDraw: false,\r\n    stroke: true,\r\n    color: '#1C54E2', // stroke color\r\n    weight: 2,\r\n    fill: false,\r\n    fillColor: '#000',\r\n    opacity: 0.3\r\n  },\r\n  targetOptions: {\r\n    useImg: false,\r\n    imgUrl: '../../static/images/ship.png',\r\n    width: 8,\r\n    height: 18,\r\n    color: '#00f', // stroke color\r\n    fillColor: '#9FD12D'\r\n  },\r\n  toolTipOptions: {\r\n    offset: [0, 0],\r\n    direction: 'top',\r\n    permanent: false\r\n  },\r\n\r\n  initialize: function (map, options) {\r\n    L.extend(this.trackPointOptions, options.trackPointOptions)\r\n    L.extend(this.trackLineOptions, options.trackLineOptions)\r\n    L.extend(this.targetOptions, options.targetOptions)\r\n    L.extend(this.toolTipOptions, options.toolTipOptions)\r\n\r\n    this._showTrackPoint = this.trackPointOptions.isDraw\r\n    this._showTrackLine = this.trackLineOptions.isDraw\r\n\r\n    this._map = map\r\n    this._map.on('mousemove', this._onmousemoveEvt, this)\r\n\r\n    this._trackLayer = new TrackLayer().addTo(map)\r\n    this._trackLayer.on('update', this._trackLayerUpdate, this)\r\n\r\n    this._canvas = this._trackLayer.getContainer()\r\n    this._ctx = this._canvas.getContext('2d')\r\n\r\n    this._bufferTracks = []\r\n\r\n    if (!this.trackPointOptions.useCanvas) {\r\n      this._trackPointFeatureGroup = L.featureGroup([]).addTo(map)\r\n    }\r\n\r\n    // 目标如果使用图片，先加载图片\r\n    if (this.targetOptions.useImg) {\r\n      const img = new Image()\r\n      img.onload = () => {\r\n        this._targetImg = img\r\n      }\r\n      img.onerror = () => {\r\n        throw new Error('img load error!')\r\n      }\r\n      img.src = this.targetOptions.imgUrl\r\n    }\r\n  },\r\n\r\n  update: function () {\r\n    this._trackLayerUpdate()\r\n  },\r\n\r\n  drawTrack: function (trackpoints) {\r\n    this._bufferTracks.push(trackpoints)\r\n    this._drawTrack(trackpoints)\r\n  },\r\n\r\n  showTrackPoint: function () {\r\n    this._showTrackPoint = true\r\n    this.update()\r\n  },\r\n\r\n  hideTrackPoint: function () {\r\n    this._showTrackPoint = false\r\n    this.update()\r\n  },\r\n\r\n  showTrackLine: function () {\r\n    this._showTrackLine = true\r\n    this.update()\r\n  },\r\n\r\n  hideTrackLine: function () {\r\n    this._showTrackLine = false\r\n    this.update()\r\n  },\r\n\r\n  remove: function () {\r\n    this._bufferTracks = []\r\n    this._trackLayer.off('update', this._trackLayerUpdate, this)\r\n    this._map.off('mousemove', this._onmousemoveEvt, this)\r\n    if (this._map.hasLayer(this._trackLayer)) {\r\n      this._map.removeLayer(this._trackLayer)\r\n    }\r\n    if (this._map.hasLayer(this._trackPointFeatureGroup)) {\r\n      this._map.removeLayer(this._trackPointFeatureGroup)\r\n    }\r\n  },\r\n\r\n  clear: function () {\r\n    this._clearLayer()\r\n    this._bufferTracks = []\r\n  },\r\n\r\n  _trackLayerUpdate: function () {\r\n    if (this._bufferTracks.length) {\r\n      this._clearLayer()\r\n      this._bufferTracks.forEach(function (element, index) {\r\n        this._drawTrack(element)\r\n      }.bind(this))\r\n    }\r\n  },\r\n\r\n  _onmousemoveEvt: function (e) {\r\n    if (!this._showTrackPoint) {\r\n      return\r\n    }\r\n    let point = e.layerPoint\r\n    if (this._bufferTracks.length) {\r\n      for (let i = 0, leni = this._bufferTracks.length; i < leni; i++) {\r\n        for (let j = 0, len = this._bufferTracks[i].length; j < len; j++) {\r\n          let tpoint = this._getLayerPoint(this._bufferTracks[i][j])\r\n          if (point.distanceTo(tpoint) <= this.trackPointOptions.radius) {\r\n            this._opentoolTip(this._bufferTracks[i][j])\r\n            return\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this._map.hasLayer(this._tooltip)) {\r\n      this._map.removeLayer(this._tooltip)\r\n    }\r\n    this._canvas.style.cursor = 'pointer'\r\n  },\r\n\r\n  _opentoolTip: function (trackpoint) {\r\n    if (this._map.hasLayer(this._tooltip)) {\r\n      this._map.removeLayer(this._tooltip)\r\n    }\r\n    this._canvas.style.cursor = 'default'\r\n    let latlng = L.latLng(trackpoint.lat, trackpoint.lng)\r\n    let tooltip = this._tooltip = L.tooltip(this.toolTipOptions)\r\n    tooltip.setLatLng(latlng)\r\n    tooltip.addTo(this._map)\r\n    tooltip.setContent(this._getTooltipText(trackpoint))\r\n  },\r\n\r\n  _drawTrack: function (trackpoints) {\r\n    // 画轨迹线\r\n    if (this._showTrackLine) {\r\n      this._drawTrackLine(trackpoints)\r\n    }\r\n    // 画船\r\n    let targetPoint = trackpoints[trackpoints.length - 1]\r\n    if (this.targetOptions.useImg && this._targetImg) {\r\n      this._drawShipImage(targetPoint)\r\n    } else {\r\n      this._drawShipCanvas(targetPoint)\r\n    }\r\n    // 画经过的轨迹点\r\n    if (this._showTrackPoint) {\r\n      if (this.trackPointOptions.useCanvas) {\r\n        this._drawTrackPointsCanvas(trackpoints)\r\n      } else {\r\n        this._drawTrackPointsSvg(trackpoints)\r\n      }\r\n    }\r\n  },\r\n\r\n  _drawTrackLine: function (trackpoints) {\r\n    let options = this.trackLineOptions\r\n    let tp0 = this._getLayerPoint(trackpoints[0])\r\n    this._ctx.save()\r\n    this._ctx.beginPath()\r\n    // 画轨迹线\r\n    this._ctx.moveTo(tp0.x, tp0.y)\r\n    for (let i = 1, len = trackpoints.length; i < len; i++) {\r\n      let tpi = this._getLayerPoint(trackpoints[i])\r\n      this._ctx.lineTo(tpi.x, tpi.y)\r\n    }\r\n    this._ctx.globalAlpha = options.opacity\r\n    if (options.stroke) {\r\n      this._ctx.strokeStyle = options.color\r\n      this._ctx.lineWidth = options.weight\r\n      this._ctx.stroke()\r\n    }\r\n    if (options.fill) {\r\n      this._ctx.fillStyle = options.fillColor\r\n      this._ctx.fill()\r\n    }\r\n    this._ctx.restore()\r\n  },\r\n\r\n  _drawTrackPointsCanvas: function (trackpoints) {\r\n    let options = this.trackPointOptions\r\n    this._ctx.save()\r\n    for (let i = 0, len = trackpoints.length; i < len; i++) {\r\n      if (trackpoints[i].isOrigin) {\r\n        let latLng = L.latLng(trackpoints[i].lat, trackpoints[i].lng)\r\n        let radius = options.radius\r\n        let point = this._map.latLngToLayerPoint(latLng)\r\n        this._ctx.beginPath()\r\n        this._ctx.arc(point.x, point.y, radius, 0, Math.PI * 2, false)\r\n        this._ctx.globalAlpha = options.opacity\r\n        if (options.stroke) {\r\n          this._ctx.strokeStyle = options.color\r\n          this._ctx.stroke()\r\n        }\r\n        if (options.fill) {\r\n          this._ctx.fillStyle = options.fillColor\r\n          this._ctx.fill()\r\n        }\r\n      }\r\n    }\r\n    this._ctx.restore()\r\n  },\r\n\r\n  _drawTrackPointsSvg: function (trackpoints) {\r\n    for (let i = 0, len = trackpoints.length; i < len; i++) {\r\n      if (trackpoints[i].isOrigin) {\r\n        let latLng = L.latLng(trackpoints[i].lat, trackpoints[i].lng)\r\n        let cricleMarker = L.circleMarker(latLng, this.trackPointOptions)\r\n        cricleMarker.bindTooltip(this._getTooltipText(trackpoints[i]), this.toolTipOptions)\r\n        this._trackPointFeatureGroup.addLayer(cricleMarker)\r\n      }\r\n    }\r\n  },\r\n\r\n  _drawShipCanvas: function (trackpoint) {\r\n    let point = this._getLayerPoint(trackpoint)\r\n    let rotate = trackpoint.dir || 0\r\n    let w = this.targetOptions.width\r\n    let h = this.targetOptions.height\r\n    let dh = h / 3\r\n\r\n    this._ctx.save()\r\n    this._ctx.fillStyle = this.targetOptions.fillColor\r\n    this._ctx.strokeStyle = this.targetOptions.color\r\n    this._ctx.translate(point.x, point.y)\r\n    this._ctx.rotate((Math.PI / 180) * rotate)\r\n    this._ctx.beginPath()\r\n    this._ctx.moveTo(0, 0 - h / 2)\r\n    this._ctx.lineTo(0 - w / 2, 0 - h / 2 + dh)\r\n    this._ctx.lineTo(0 - w / 2, 0 + h / 2)\r\n    this._ctx.lineTo(0 + w / 2, 0 + h / 2)\r\n    this._ctx.lineTo(0 + w / 2, 0 - h / 2 + dh)\r\n    this._ctx.closePath()\r\n    this._ctx.fill()\r\n    this._ctx.stroke()\r\n    this._ctx.restore()\r\n  },\r\n\r\n  _drawShipImage: function (trackpoint) {\r\n    let point = this._getLayerPoint(trackpoint)\r\n    let dir = trackpoint.dir || 0\r\n    let width = this.targetOptions.width\r\n    let height = this.targetOptions.height\r\n    let offset = {\r\n      x: width / 2,\r\n      y: height / 2\r\n    }\r\n    this._ctx.save()\r\n    this._ctx.translate(point.x, point.y)\r\n    this._ctx.rotate((Math.PI / 180) * dir)\r\n    this._ctx.drawImage(this._targetImg, 0 - offset.x, 0 - offset.y, width, height)\r\n    this._ctx.restore()\r\n  },\r\n\r\n  _getTooltipText: function (targetobj) {\r\n    let content = []\r\n    content.push('<table>')\r\n    if (targetobj.info && targetobj.info.length) {\r\n      for (let i = 0, len = targetobj.info.length; i < len; i++) {\r\n        content.push('<tr>')\r\n        content.push('<td>' + targetobj.info[i].key + '</td>')\r\n        content.push('<td>' + targetobj.info[i].value + '</td>')\r\n        content.push('</tr>')\r\n      }\r\n    }\r\n    content.push('</table>')\r\n    content = content.join('')\r\n    return content\r\n  },\r\n\r\n  _clearLayer: function () {\r\n    let bounds = this._trackLayer.getBounds()\r\n    if (bounds) {\r\n      let size = bounds.getSize()\r\n      this._ctx.clearRect(bounds.min.x, bounds.min.y, size.x, size.y)\r\n    } else {\r\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height)\r\n    }\r\n    if (this._map.hasLayer(this._trackPointFeatureGroup)) {\r\n      this._trackPointFeatureGroup.clearLayers()\r\n    }\r\n  },\r\n\r\n  _getLayerPoint (trackpoint) {\r\n    return this._map.latLngToLayerPoint(L.latLng(trackpoint.lat, trackpoint.lng))\r\n  }\r\n})\r\n\r\nexport const draw = function (map, options) {\r\n  return new Draw(map, options)\r\n}\r\n","import {\r\n  Track\r\n} from './track'\r\nimport {\r\n  TrackController\r\n} from './trackcontroller'\r\nimport {\r\n  Clock\r\n} from './clock'\r\nimport {\r\n  Draw\r\n} from './draw'\r\nimport * as Util from './util'\r\n\r\n/**\r\n * single track data\r\n * [{lat: 30, lng: 116, time: 1502529980, heading: 300, info:[]},{},....]\r\n *\r\n * mutiple track data\r\n * [single track data, single track data, single track data]\r\n */\r\nexport const TrackPlayBack = L.Class.extend({\r\n\r\n  includes: L.Mixin.Events,\r\n\r\n  initialize: function (data, map, options = {}) {\r\n    let drawOptions = {\r\n      trackPointOptions: options.trackPointOptions,\r\n      trackLineOptions: options.trackLineOptions,\r\n      targetOptions: options.targetOptions,\r\n      toolTipOptions: options.toolTipOptions\r\n    }\r\n    this.tracks = this._initTracks(data)\r\n    this.draw = new Draw(map, drawOptions)\r\n    this.trackController = new TrackController(this.tracks, this.draw)\r\n    this.clock = new Clock(this.trackController, options.clockOptions)\r\n\r\n    this.clock.on('tick', this._tick, this)\r\n  },\r\n  start: function () {\r\n    this.clock.start()\r\n    return this\r\n  },\r\n  stop: function () {\r\n    this.clock.stop()\r\n    return this\r\n  },\r\n  rePlaying: function () {\r\n    this.clock.rePlaying()\r\n    return this\r\n  },\r\n  slowSpeed: function () {\r\n    this.clock.slowSpeed()\r\n    return this\r\n  },\r\n  quickSpeed: function () {\r\n    this.clock.quickSpeed()\r\n    return this\r\n  },\r\n  getSpeed: function () {\r\n    return this.clock.getSpeed()\r\n  },\r\n  getCurTime: function () {\r\n    return this.clock.getCurTime()\r\n  },\r\n  getStartTime: function () {\r\n    return this.clock.getStartTime()\r\n  },\r\n  getEndTime: function () {\r\n    return this.clock.getEndTime()\r\n  },\r\n  isPlaying: function () {\r\n    return this.clock.isPlaying()\r\n  },\r\n  setCursor: function (time) {\r\n    this.clock.setCursor(time)\r\n    return this\r\n  },\r\n  setSpeed: function (speed) {\r\n    this.clock.setSpeed(speed)\r\n    return this\r\n  },\r\n  showTrackPoint: function () {\r\n    this.draw.showTrackPoint()\r\n    return this\r\n  },\r\n  hideTrackPoint: function () {\r\n    this.draw.hideTrackPoint()\r\n    return this\r\n  },\r\n  showTrackLine: function () {\r\n    this.draw.showTrackLine()\r\n    return this\r\n  },\r\n  hideTrackLine: function () {\r\n    this.draw.hideTrackLine()\r\n    return this\r\n  },\r\n  dispose: function () {\r\n    this.clock.off('tick', this._tick)\r\n    this.draw.remove()\r\n    this.tracks = null\r\n    this.draw = null\r\n    this.trackController = null\r\n    this.clock = null\r\n  },\r\n  _tick: function (e) {\r\n    this.fire('tick', e)\r\n  },\r\n  _initTracks: function (data) {\r\n    let tracks = []\r\n    if (Util.isArray(data)) {\r\n      if (Util.isArray(data[0])) {\r\n        // 多条轨迹\r\n        for (let i = 0, len = data.length; i < len; i++) {\r\n          tracks.push(new Track(data[i]))\r\n        }\r\n      } else {\r\n        // 单条轨迹\r\n        tracks.push(new Track(data))\r\n      }\r\n    }\r\n    return tracks\r\n  }\r\n})\r\n\r\nexport const trackplayback = function (data, map, options) {\r\n  return new TrackPlayBack(data, map, options)\r\n}\r\n","import {\r\n  TrackPlayBack,\r\n  trackplayback\r\n} from './trackplayback'\r\n\r\nexport {\r\n  TrackPlayBack,\r\n  trackplayback\r\n}\r\n\r\nwindow.L.TrackPlayBack = TrackPlayBack\r\nwindow.L.trackplayback = trackplayback\r\n"],"sourceRoot":""}